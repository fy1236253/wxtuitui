#!/bin/bash
WORKSPACE=$(cd $(dirname $0)/; pwd)
cd $WORKSPACE
mkdir -p var

module=wechatv1
app=go-$module
conf=cfg.json
pidfile=var/app.pid
logfile=var/app.log


export GOPATH=$WORKSPACE

function update(){
    go get  github.com/streadway/amqp
    go get  github.com/garyburd/redigo/redis
    go get  github.com/toolkits/file
    go get  github.com/toolkits/proc
    go get  github.com/go-sql-driver/mysql 
    go get  github.com/chanxuehong/wechat
    go get  github.com/toolkits/net/httplib
    go get  github.com/astaxie/beego/session
    go get  github.com/dchest/captcha
}

function test(){
    go test http
}

function check_pid() {
    if [ -f $pidfile ];then
        pid=`cat $pidfile`
        if [ -n $pid ]; then
            running=`ps -p $pid|grep -v "PID TTY" |wc -l`
            return $running
        fi
    fi
    return 0
}

function start() {
    check_pid
    running=$?
    if [ $running -gt 0 ];then
        echo -n "$app now is running already, pid="
        cat $pidfile
        return 1
    fi

    if ! [ -f $conf ];then
        echo "Config file $conf doesn't exist, creating one."
        cp cfg.example.json $conf
    fi
    nohup bin/$app -c $conf >> $logfile &
    echo $! > $pidfile
    echo "$app started..., pid=$!"

    sleep 1
    check_pid
    running=$?
    if [ $running -gt 0 ];then
    	echo "OK "
    else
    	echo "Failed"
    fi
}

function stop() {
	check_pid
    running=$?
    if [ $running -gt 0 ];then
        pid=`cat $pidfile`

        kill $pid
        echo "$app stoped..."
        rm $pidfile
    else
        echo "$app already stoped..."
    fi
}

function restart() {
    stop
    sleep 1
    start
}

function status() {
    check_pid
    running=$?
    if [ $running -gt 0 ];then
        echo started
    else
        echo stoped
    fi
}

function tailf() {
    tail -f $logfile
}

function build() {
    go build
    if [ $? -ne 0 ]; then
        exit $?
    fi
    #mv $module bin/$app
    mv $module  bin/$app
    bin/$app -v
}




function help() {
    echo "$0 update|build|start|stop|restart|status|tail|test"
}

if [ "$1" == "" ]; then
    help
elif [ "$1" == "stop" ];then
    stop
elif [ "$1" == "start" ];then
    start
elif [ "$1" == "restart" ];then
    restart
elif [ "$1" == "status" ];then
    status
elif [ "$1" == "tail" ];then
    tailf
elif [ "$1" == "build" ];then
    build
elif [ "$1" == "update" ];then
    update
elif [ "$1" == "test" ];then
    test
elif [ "$1" == "all" ];then
    build
    restart
    tailf
else
    help
fi